a,.clickable-text {
	text-decoration: none;
	color: #fff
}
canvas{
  display:block;
  position:absolute;
}
#canvasBox{
  width:100%;
  height:100%;
  pointer-events:none;
}
#canvasUI{
  top:0px;
  left:0px;
  pointer-events:none;
}
.canvas-overlay{
	position:absolute;
	background:#00000080;
	backdrop-filter:blur(10px);
	top:0;
	left:0;
	font-size:35px;
	width:100%;
	height:100%;
	z-index:9999;
}
.canvas-overlay0{
	position:absolute;
	z-index:9999;
}
.div-confirm>button{
	width:200px;
	font-size:20px;
	border:none;
	margin:0px 100px 0px 100px;
	outline:none;
	font-family:EvadesTahoma;
	background:#2f3ab0;
}
input::spelling-error{
  color:red;
  text-decoration:none;
}
button,select,input{
  font-family:EvadesTahoma;
}
.div-confirm>button:hover{
	filter:brightness(1.5);
}
.div-confirm>button:active{
	filter:brightness(2);
}
a:hover,.clickable-text:hover {
	color: #a0c5ff
}
a:active,.clickable-text:active {
	color: #7aadff
}
leaderboard{
	z-index:99;
}
.div-confirm{
	position:absolute;
	top:50%;
	width:100%;
	text-align:center;
	left:50%;
	z-index:9999;
	transform:translate(-50%,-50%);
}
leaderboard{transform: scale(var(--scale, 1)) translate(-10px, 10px);transform-origin: top right;right:0;top:0;pointer-events:visible;color: #f9f9f9;width: 220px;max-height: 600px;background-color: #00000080;padding: 2px 2px 10px;position: absolute;overflow-x: hidden;overflow-y: auto}
.leaderboard-title {width: 100%;text-align: center;white-space: nowrap;font: 700 20px EvadesTahoma;display: inline-block}
.leaderboard-world-title {width: 100%;text-align: center;margin-top: 5px;font: 18px EvadesTahoma;display: inline-block}
.leaderboard-line {text-align: center;text-overflow: ellipsis;white-space: nowrap;font: 14px EvadesTahoma;overflow: hidden}
.leaderboard-title-break {text-align: center;text-overflow: ellipsis;white-space: nowrap;font: 3px EvadesTahoma;overflow: hidden}
leaderboard.big {width: 230px}
#chat {
	z-index: 99;
  transform: scale(var(--scale, 1)) translate(60px, 10px);
  transform-origin: top left;
  top: 0;
  left: 0;
  pointer-events: visible;
	width: 300px;
	height: 200px;
	background-color: #0009;
	position: fixed;
	bottom: 0
}

#chat-window {
	width: 300px;
	height: 165px;
	padding-bottom: 10px;
	overflow: auto
}

.chat-message {
	color: #fff;
	margin: 5px 10px 0;
	font: 12px EvadesTahoma
}

.chat-message-sender {
	cursor: pointer
}

.dev {
	color: #87ceeb
}

.head-mod {
	color: #c00000
}

.africa-asia {
	color: #939393
}
.africa-europe {
	color: #ffceb7
}
.africa-europe-asia {
	color: #fdfd13
}
.europe-asia {
	color: #edffdf
}

.sr-mod {
	color: #ff4949
}

.mod {
	color: #ffb349
}

.jr-mod {
	color: #ffe049
}

.youtuber {
	color: #4bfc9a
}

.streamer {
	color: #9248da
}

.chat-message .server-warning {
	color: #ffceb7
}

.chat-message .server-warning .chat-message-sender {
	cursor: inherit
}

.server-info {
	color: #fdfd13
}

.chat-message .server-info .chat-message-sender {
	cursor: inherit
}

.chat-message .private-message {
	color: #edffdf;
	background-color: #b587aabd;
	border-radius: 4px;
	padding: 2px;
	display: inline-block
}

#chat-input {
	width: 100%;
	height: 25px;
	box-sizing: border-box;
	position: absolute;
	bottom: 0
}

.mydomain>span{
	display:none;
}
.mydomain:hover>span{
	display:block;
}
.discord-server>span{
	display:none;
}
.discord-server:hover>span{
	display:block;
}
.issues>span{
	display:none;
}
.issues:hover>span{
	display:block;
}
.pull_request>span{
	display:none;
}
.pull_request:hover>span{
	display:block;
}
.discussions>span{
	display:none;
}
.discussions:hover>span{
	display:block;
}
.hero-select-question {
    float: right;
    display: inline-block;
    position:absolute;
    bottom: 10px;
    right: 10px;
}

.hero-select-question div {
    width: 32px;
    height: 32px;
    background: url(./miscellaneous/question.png) 0 0/32px;
}
.hero-select-question help {
  display:none;
  width:160px;
  position: absolute;
  font-family: EvadesTahoma;
  bottom: 16px;
  right: 16px;
  border: 5px black solid;
  background: #00000080;
  border-radius: 10px;
}
font>helpText{
  display:none;
  color:white;
  width: 225px;
  position: absolute;
  bottom: -5px;
  right: 100%;
  border: 5px black solid;
  background: #00000080;
  border-radius: 10px;
}
font:hover>helpText{
  display:block;
}
font{
  color:white;
}
font:hover{
  color:lime;
}
helpText b{
  text-transform: uppercase;
  text-decoration: underline;
}
.hero-select-question:hover help {
  display:block;
}
.hero-select-question:hover div {
    width: 32px;
    height: 32px;
    background: url(./miscellaneous/question-hover.png) 0 0/32px;
}

#inputIndicator {
	z-index: 1000;
	position: absolute;
	top: 10px;
	right: 10px
}

#inputIndicator img {
	width: 32px;
	height: 32px
}

:root {
    --number: #00FFFF;
    --text: #00FF00;
    --boolean: #FF00FF;
    --cardinal: #FF0000;
    --direction: #007FFF;
    --direction_background: #003F7F;
    --direction_background_transparent: #003F7F80;
    --direction_background_hover: #007FAF;
}
body {
    background: #222222;
    color: #ffffff;
    font-family: EvadesTahoma;
    margin: 0;
    overflow: hidden;
}

::-webkit-scrollbar {
    width: 3px;
    height: 3px;
}
::-webkit-scrollbar-track {
    background: transparent;
}
::-webkit-scrollbar-thumb {
    background: #606060;
}
.hidden {
    display: none;
}

#EvadesIcons{
  pointer-events:visible;
}
#tl {
	z-index:100;
  position: absolute;
  pointer-events:visible;
  transform: scale(var(--scale, 1)) translate(5px, 5px);
  transform-origin: top left;
  top: 0;
  left: 0;
	max-width: 35px;
  padding: 5px;
  display: flex;
  -ms-flex-direction: column;
  flex-direction: column;
  background: #00000080;
}
#exportFile:disabled,#ExportFormatType:disabled,#importFile:disabled~#importLabel,#importer:disabled,#reset:disabled{
  opacity:0.5;
  color:black;
  cursor:not-allowed;
}
#exportFile {
    position: relative;
    background: #00a000;
    border: none;
    border-radius: 2px 2px 0 0;
    padding: 5px;
    width: 35px;
    height: 35px;
    cursor: pointer;
    overflow: hidden;
}
#slot {
    position: relative;
    background: #00a000;
    border: none;
    border-radius: 2px 2px 0 0;
    padding: 5px;
    width: 35px;
    height: 35px;
    cursor: pointer;
    overflow: hidden;
}
#exportFile svg,#slot svg {
    position: relative;
    z-index: 1;
    transition: 0.4s;
}
#exportFile path,#slot path {
    transition: 0.4s;
}
#exportFile:hover path,#slot:hover path {
    fill: #ffffff;
}
#exportFile::before, #slot::before {
    content: "";
    display: block;
    width: 100%;
    height: 100%;
    position: absolute;
    top: 0;
    left: 0;
    background: #00c000;
    transition: transform 0.4s;
    transform: translateY(-100%);
}
#exportFile:hover::before,#slot:hover::before {
    transform: translateY(0%);
}
#importer{
	background: #008000;
	border: none;
	border-radius: 0 0 2px 2px;
	height: 15px;
	font-family: EvadesTahoma;
	font-weight: bold;
	text-align: center;
	-webkit-appearance: unset;
    transition: background 0.4s;
}
#importer:disabled {
	cursor:not-allowed;
}
#importer:hover {
    background: #00a000;
}
#ExportFormatType{
	background: #00a000;
	border: none;
	border-radius: 0 0 2px 2px;
	height: 15px;
	font-family: EvadesTahoma;
	text-align: center;
	-webkit-appearance: unset;
    transition: background 0.4s;
}
#ExportFormatType:hover {
    background: #00c000;
}
#importLabel {
    position: relative;
    background: #00a000;
    border: none;
    border-radius: 2px 2px 0 0;
    padding: 5px;
    width: 25px;
    height: 25px;
    cursor: pointer;
    overflow: hidden;
}
#reset,#playtester {
    position: relative;
    background: #00a000;
    border: none;
    border-radius: 2px;
    padding: 5px;
    width: 35px;
    height: 35px;
    cursor: pointer;
    overflow: hidden;
}
#playtester{
  padding: 0;
}
#reset svg {
    position: relative;
    z-index: 1;
    transition: 0.4s;
}
#reset path {
    transition: 0.4s;
}
#reset:hover path {
    fill: #ffffff;
}
#reset::before {
    content: "";
    display: block;
    border-radius: 100%;
    width: 100%;
    height: 100%;
    position: absolute;
    top: 0;
    left: 0;
    background: #00c000;
    transition: transform 0.4s;
    transform: scale(0%);
}
#reset:hover::before {
    transform: scale(140%);
}
#importLabel svg {
    position: relative;
    z-index: 1;
    transition: 0.4s;
}
#importLabel path {
    transition: 0.4s;
}
#importLabel:hover path {
    fill: #ffffff;
}
#importLabel::before {
    content: "";
    display: block;
    width: 100%;
    height: 100%;
    position: absolute;
    top: 0;
    left: 0;
    background: #00c000;
    transition: transform 0.4s;
    transform: translateY(100%);
}
#importLabel:hover::before {
    transform: translateY(0%);
}
#importFile {
    display: none;
}

#createObstacle {
    background: url("https://skap.io/textures/images/background11.png");
    border-radius: 2px 2px 0 0;
}
#createObstacle::before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    width: 25px;
    height: 25px;
    background: var(--obstacle);
}
#createLava {
    background: var(--lava);
}
#createSlime {
    background: var(--slime);
}
#createIce {
    background: var(--ice);
    border-radius: 0 0 2px 2px;
}
.create {
    transition: transform 0.4s;
    overflow: hidden;
    position: relative;
    box-sizing: content-box;
    width: 25px;
    height: 25px;
    padding: 0;
    border: 5px solid #ffffff;
    cursor: pointer;
}
.create:not([disabled]):hover {
    border-color: #c0c0c0 !important;
    transform: translateX(10px);
}
.create[disabled] {
    cursor: unset;
}
.create[disabled]::after {
    content: "";
    position: absolute;
    top: -5px;
    left: -5px;
    width: 35px;
    height: 35px;
    background: #ffffffe0;
}
*[hidden]{
  visibility: hidden;
}
settingsheader{
  font:bold 32px EvadesTahoma;
  display:block;
  width:100%;
  text-align:center;
  border-bottom:3px white solid;
}
titleheader{
  font: bold 20px EvadesTahoma;
  border-bottom: 1px white solid;
}
#tip>table{width:100%}
#tip {
  font-family: EvadesTahoma;
	width:416px;
	position: absolute;
  z-index:99;
	overflow-y:auto;
	overflow-x:hidden;
	margin:0;
	-webkit-user-select: none;
	-ms-user-select: none;
	user-select: none;
	background: #2f3ab0e6;
	padding: 10px;
	border-radius: 7.5px;
}
#extensionPage{
	display: -ms-grid;
	display: grid;
	grid-column-gap: 0px;
	grid-row-gap: 0px;
	width:350px;
	position: absolute;
	margin:0;
	-webkit-user-select: none;
    -ms-user-select: none;
    user-select: none;
	background: #2f3ab0dd;
	padding: 10px;
	border-radius:10px;
	align-items: center;
	justify-items: center;
	justify-content: center;
	align-content: center;
	border:2px #2f3ab0 solid;
}
.settings-launcher:hover{
  filter: brightness(120%);
}
.settings-launcher{
	cursor: pointer;
	position:absolute;
	bottom: 10px;
	right: 10px;
}
.settings-launcher img {
	width: 32px;
	height: 32px;
}
#extensionPage>titleheader {border-bottom:3px white solid}
#objectFocus {
    display: none;
    position: absolute;
    top: 200px;
    left: 0px;
    -webkit-user-select: none;
    -ms-user-select: none;
    user-select: none;

    background: #00000080;
    padding: 5px 10px;
}
#contextmenu {
    position: absolute;
    user-select: none;
    top: 0;
    left: 0;
    z-index: 1;
    border-radius: 2px;
    overflow: hidden;
    background: #202020;
}
#contextmenu{
	width:300px;
	border-collapse:collapse;
}
#contextmenu button {
    background: #202020;
    color: #ffffff;
    border: none;
    cursor: pointer;
    text-align: center;
	width:100%;
}
#contextmenu button:hover {
    background: #303030;
}
#contextmenu button:disabled {
    color: #FFFFFF40;
    cursor: not-allowed;
}
#contextmenu.hidden {
    display: none;
}
#objectActions {
    border-bottom: 1px solid #404040;
    display: flex;
    -ms-flex-direction: column;
    flex-direction: column;
}
#objectActions.hidden {
    display: none;
}
#bottommenu.hidden {
    display: initial;
    transform: translateY(100%);
}
#bottommenu {
    position: absolute;
    left: 0;
    bottom: 0;
    background: #202020;
    width: 100%;
    height: 100px;
    transition: 0.4s;
}
#bottommenulabel {
    padding: 10px;
    box-sizing: border-box;
    background: #303030;
    position: absolute;
    bottom: 100%;
    width: 100%;
}
#togglebottommenu {
    background: transparent;
    float: right;
    cursor: pointer;
    border: none;
    color: #ff0000;
    transform: scale(2, -1);
    transition: transform 0.4s, color 0.4s;
}
#resizemenu {
    cursor: ew-resize;
    position: absolute;
    left: -2.5px;
    top: 0;
    width: 5px;
    height: 100%;
}
#togglebottommenu:focus {
    outline: none;
}
.hidden #togglebottommenu {
    color: #00ff00;
    transform: scale(2, 1);
}
#areaList {
    padding: 5px;
}
#areaList button {
    background: #303030;
    border: none;
    cursor: pointer;
    color: #ffffff;
}
#areaList button:hover {
    background: #404040;
}
#areaList button:focus {
    outline: none;
}









/* Input styling */
input::-webkit-outer-spin-button, input::-webkit-inner-spin-button {
    -webkit-appearance: none;
    margin: 0;
}

input[type=number] {
    -moz-appearance: textfield;
    appearance: textfield;
}

#menu {
  pointer-events: visible;
    overflow: auto;
    position: absolute;
  transform-origin: top right;
  transform: scale(var(--scale, 1)) translate(-15px, 0);
    right: 0;
    top: 0;
	z-index:100;
    width: 300px;
    max-height: 500px;
    margin: 0;
    padding: 0;
    -webkit-user-select: none;
    -ms-user-select: none;
    user-select: none;

    transition: transform 0.4s;
}
#menu.hidden {
    transform: translateY(calc(-100% + 22px));
    display: block;
}
#togglemenu {
    display: block;
    width: 100%;
    position: relative;
    top: 100%;
    font: 11px EvadesTahoma;
    line-height: 20px;
    background: #000000;
    border: none;
    color: #ffffff;
    text-align: center;
    cursor: pointer;
}
#togglemenu:focus {
    outline: none;
}
ul {
    list-style: none;
    margin: 0;
    padding-left: 0;
    overflow: visible;
}
li {
    overflow: auto;
}
#menu input {
    outline: none;
    background: #333;
    border: none;
    float: right;
    width: 120px;
    margin-top: 4.5px;
    box-sizing: border-box;
}
#menu input:hover {
    background: #444;
}
.folder {
    list-style: none;
}
.title {
    /* margin-left: -4px; */
    padding: 0 4px 0 16px;
    background: #000000;
    font: 11px EvadesTahoma;
    line-height: 27px;
    height: 27px;
    cursor: pointer;
    border-bottom: 1px solid #333;
}
.title::before {
    content: "⯆";
    position: absolute;
    display: block;
    transform: translate(-13px, 0);
}
.closed > .title::before {
    content: "⯈";
}
.indent {
    margin-left: 4px;
}
.label {
    overflow: hidden;
    font: 11px EvadesTahoma;
    float: left;
    display: block;
    line-height: 27px;
    margin: 0;
}
.section > .label{
    width: 100%;
    overflow: hidden;
    font: bold 20px EvadesTahoma;
    text-align: center;
    display: block;
    line-height: 27px;
    margin: 0;
    float:none;
}
.property {
    padding: 0 5px 0 4px;
    border-bottom: 1px solid #303030;
    background: #202020;
}
.closed > .indent {
    display: none;
    transform: rotateX(90deg);
}
.property.number {
    border-left: 3px solid var(--number);
}
.property.number input {
    color: var(--number);
}
.property.text {
    border-left: 3px solid var(--text);
}
.property.cardinal {
    border-left: 3px solid red;
}
.property.direction {
    border-left: 3px solid #0000FF;
}
.property.text input {
    color: var(--text);
}

.property.color {
    border-left: 3px solid #ffffff;
}
.property.color label {
    box-sizing: border-box;
    display: block;
    float: right;
    margin-top: 4.5px;
    width: 120px;
    height: calc(100% - 8px);
    overflow: hidden;
    border: 1px solid #303030;
    font: bold 13px EvadesTahoma;
    line-height: 17px;
    text-align: center;
    position: relative;
}
.property.color input {
    opacity: 0;
    position: absolute;
    cursor: pointer;
    left: 0;
    padding: 0;
    margin: 0 !important;
    width: 100% !important;
    height: 100%;
}
.property.color.light label {
    color: #000000;
}
.property.switch {
    border-left: 3px solid var(--boolean);
}
.property.switch input {
    color: var(--boolean);
}
.property.creator {
    animation: infer-border 5s ease-in-out infinite;
}
.property input {
    color: #ffffff;
}

.switchLabel {
    float: right;
    cursor: pointer;
    margin-right: 0;
    margin-top: 4.5px;
}
.switchLabel input {
    display: none;
}
.switchSpan {
    width: 37.5px;
    height: 20px;
    display: block;
    position: relative;
    background: #808080;
    border-radius: 12.5px;
}
.switchSpan::after {
    content: "";
    display: block;
    position: relative;
    width: calc(50% - 2.5px);
    height: 15px;
    top: 2.5px;
    left: 2.5px;
    background: #ffffff;
    border-radius: 7.5px;
}
input:checked+.switchSpan {
    background: var(--boolean);
}
input:checked+.switchSpan::after {
    left: 50%;
}

.property.cardinal span {
    line-height: 50px;
}
.cardinalWrapper {
    float: right;
    position: relative;
    width: 45px;
    height: 45px;
    margin-top: 2.5px;
    margin-right: calc(30% - 22.5px);
}
.cardinalWrapper button {
    width: 0;
    height: 0;
    padding: 0;
    cursor: pointer;
    background: transparent;
    position: absolute;
}
.cardinalWrapper button:focus {
    outline: none;
}
.cardinalUp {
    left: 15px;
    border-top: none;
    border-left: 7.5px solid #0000;
    border-right: 7.5px solid #0000;
    border-bottom: 12px solid #fff;
}
.cardinalUp:hover {
    border-bottom-color: #ccc;
}
.cardinalUp.active {
    border-bottom-color: var(--cardinal) !important;
}
.cardinalRight {
    right: 0;
    top: 15px;
    border-right: none;
    border-top: 7.5px solid #0000;
    border-bottom: 7.5px solid #0000;
    border-left: 12px solid #fff;
}
.cardinalRight:hover {
    border-left-color: #ccc;
}
.cardinalRight.active {
    border-left-color: var(--cardinal) !important;
}
.cardinalDown {
    left: 15px;
    bottom: 0;
    border-bottom: none;
    border-left: 7.5px solid #0000;
    border-right: 7.5px solid #0000;
    border-top: 12px solid #fff;
}
.cardinalDown:hover {
    border-top-color: #ccc;
}
.cardinalDown.active {
    border-top-color: var(--cardinal) !important;
}
.cardinalLeft {
    top: 15px;
    border-left: none;
    border-top: 7.5px solid #0000;
    border-bottom: 7.5px solid #0000;
    border-right: 12px solid #fff;
}
.cardinalLeft:hover {
    border-right-color: #ccc;
}
.cardinalLeft.active {
    border-right-color: var(--cardinal) !important;
}
.cardinalCenter {
    display: block;
    top: 16px;
    left: 16px;
    width: 13px !important;
    height: 13px !important;
    border: none;
    border-radius: 50%;
    background: #fff !important;
}
.cardinalCenter:hover {
    background: #ccc !important;
}
.cardinalCenter.active {
    background: var(--cardinal) !important;
}

.property.select select,.property.createProperty select {
    margin-top: 5.5px;
    float: right;
    background: #333;
    color: #fff;
    cursor: pointer;
    border: #555;
    width: 120px;
    text-overflow: ellipsis;
}
.property.select select:hover,.property.createProperty select:hover {
    background: #444;
}
.property.select option,.property.createProperty option {
    background: #333;
}
.property.select select:focus,.property.createProperty select:focus {
    outline: none;
}
.property.select.number select {
    color: var(--number);
}
.property.createProperty.creator select {
    animation: infer 5s ease-in-out infinite;
}
.property.select.switch select {
    color: var(--boolean);
}
.property.select.text select {
    color: var(--text);
}
@keyframes infer{
  0% {color: red}
  50% {color: yellow}
  100% {color: red}
}
@keyframes infer-border{
  0% {border-left: 3px solid red;}
  50% {border-left: 3px solid yellow;}
  100% {border-left: 3px solid red;}
}
@keyframes infer2{
  0% {background: blue}
  50% {background: fuchsia}
  100% {background: blue}
}
.property.createProperty.text select {
    color: var(--text);
}
.property.select.text select>option.unused {
    color: hsl(60, 100%, 50%);
}
.property.select.text select>option.not-implemented {
    color: hsl(0, 100%, 50%);
}
.property.select.text select>option.joke {
    color: hsl(300, 100%, 50%);
}

.property.direction .label {
    line-height: 118px;
}
.directionCircle {
    position: relative;
    float: right;
    margin-right: calc(30% - 50px);
    margin-top: 7px;
    width: 100px;
    height: 100px;
    background: var(--direction_background);
    border: 2px solid var(--direction);
    border-radius: 50%;
}
.directionCircle input {
    position: absolute;
    top: 50%;
    left: 50%;
    width: 30px !important;
    text-align: center;
    transform: translate(-50%, -50%);
    color: var(--direction);
    background: var(--direction_background_transparent) !important;
    border-bottom: 2px solid var(--direction) !important;
    margin: 0 !important;
}
.directionLever {
    position: absolute;
    top: calc(50% - 1px);
    left: 50%;
    width: calc(50% + 1px);
    height: 2px;
    background: var(--direction);
    transform-origin: 0 1px;
}
.directionHandle {
    position: absolute;
    top: -6px;
    right: -6px;
    width: 10px;
    height: 10px;
    background: var(--direction_background);
    border: 2px solid var(--direction);
    border-radius: 50%;
    cursor: pointer;
}
.directionHandle:hover {
    background: var(--direction_background_hover);
}
.array {
    counter-reset: index;
}
.array .counter::after {
    counter-increment: index;
    content:counter(index);
}
.label.counter ~ select,
.spawners .indent [data-type] input,
.spawners .indent [data-type] label,
.spawners .indent [data-type] select{transform:translateX(-25px)}
[data-type] .label .remove::after{
  content:"-";
}
.property.creator .clone{
  transform: translate(25px, 0);
  animation: infer2 5s ease-in-out infinite;
  display:block;
}
[data-type] .label .remove, [data-type].array .temp.remove{
  animation: infer2 5s ease-in-out infinite;
  display:block !important;
}
.min .label.counter ~ select{transform:translateX(0px)}
.array .add {
    width: 100%;
    font: 11px EvadesTahoma;
    line-height: 20px;
    background: #000000;
    border: none;
    color: #ffffff;
    text-align: center;
    cursor: pointer;
    border-bottom: 1px solid #303030;
}
.property.createProperty.creator select{
    transform:translateX(-25px);
}
.addProp:hover {
    filter: brightness(0.8);
}
.array .add::after {
    content: "Add Item";
}
.array .centerX::after {
    content: "Center Spawner X";
}
.array .centerY::after {
    content: "Center Spawner Y";
}
.array .centerX:focus {
    outline: none;
}
.array .centerY:focus {
    outline: none;
}
/* i have no idea how css works so im boilerplating this */
.array .centerY, .array .centerX {
    width: 50%;
    font: 11px EvadesTahoma;
    line-height: 20px;
    background: #000000;
    border: none;
    color: #ffffff;
    text-align: center;
    cursor: pointer;
    border-bottom: 1px solid #303030;
}

.array .add:focus, .addProp:focus {
    outline: none;
}
.array .wrapper {
    width: 100%;
}
.array .property {
    position: relative;
}
.array .property:hover .wrapper {
    width: calc(100% - 25px);
}
.array .clone {
    display: none;
    width: 20px;
    height: 20px;
    position: absolute;
    right: 30px;
    top: 3.7px;
    background: #00FF00;
    border: none;
    border-radius: 50%;
    cursor: pointer;
    text-align: center;
    padding: 0;
}
.array .clone:hover {
    background: #80FF80;
}
.array .clone::after {
    content: "+";
    font-weight: bold;
    font-size: 20px;
    line-height: 20px;
    color: #FFFFFF;
}
.array .property:hover .clone {
    display: block;
}
.array .title:hover .clone {
    display: block;
}
.array .remove {
    display: none;
    width: 20px;
    height: 20px;
    position: absolute;
    right: 5px;
    top: 3.7px;
    background: #FF0000;
    border: none;
    border-radius: 50%;
    cursor: pointer;
    text-align: center;
    padding: 0;
}
.array .remove:hover {
    background: #FF8080;
}
.array .remove::after {
    content: "×";
    font-weight: bold;
    font-size: 20px;
    line-height: 20px;
    color: #FFFFFF;
}
.array .property:hover .remove {
    display: block;
}
.array .title:hover .remove {
    display: block;
}
.array .title {
    position: relative;
}
.array .title .remove::after {
    color: #FFFFFF;
}
.array.min .property:hover .remove {
    display: none;
}
.array.min .title:hover .remove {
    display: none;
}
.array.min .property:hover .wrapper {
    width: 100% !important;
}

@keyframes infer-light{
  0% {color: #C00000}
  50% {color: #C0C000}
  100% {color: #C00000}
}
@keyframes infer-border-light{
  0% {border-left: 3px solid #C00000;}
  50% {border-left: 3px solid #C0C000;}
  100% {border-left: 3px solid #C00000;}
}
@keyframes infer2-light{
  0% {background: #0000C0}
  50% {background: #C000C0}
  100% {background: #0000C0}
}
@media (prefers-color-scheme: light) {
    #contextmenu {
        background: #e0e0e0;
        color: #000000;
    }
    #contextmenu button {
        background: #e0e0e0;
        color: #202020;
    }
    #contextmenu button:hover {
        background: #c0c0c0;
    }
    #contextmenu button:disabled {
        color: #20202040;
    }
    :root {
        --text: #00C000;
        --number: #00C0C0;
        --boolean: #C000C0;
    }
    .property.createProperty.creator select {
        animation: infer-light 5s ease-in-out infinite;
    }
    .property.creator {
        animation: infer-border-light 5s ease-in-out infinite;
    }
    .property.creator .clone{
      transform: translate(25px, 0);
      animation: infer2-light 5s ease-in-out infinite;
      display:block;
    }
    [data-type] .label .remove, [data-type].array .temp.remove{
      animation: infer2-light 5s ease-in-out infinite;
      display:block !important;
    }
    #menu input,#menu select {
        background: #e0e0e0;
    }
    #menu input:hover,#menu select:hover {
        background: #dcdcdc;
    }
    #menu input:focus,#menu select:focus {
        background: #d8d8d8;
    }
    .title {
        background: #c0c0c0;
        color: #000000;
        border-bottom-color: #c0c0c0;
    }
    .property {
        border-bottom-color: #c0c0c0;
        background: #d0d0d0;
    }
    .label {
        color: #000000;
    }
    #togglemenu {
        background: #c0c0c0;
        color: #000000;
    }
    .array .add {
        background: #c0c0c0;
        color: #000000;
        border-bottom-color: #b0b0b0;
    }
    .array .centerY, .array .centerX {
        background: #c0c0c0;
        color: #000000;
        border-bottom-color: #b0b0b0;
    }
    .cardinalUp {
        border-bottom-color: #c0c0c0;
    }
    .cardinalUp:hover {
        border-bottom-color: #a0a0a0;
    }
    .cardinalRight {
        border-left-color: #c0c0c0;
    }
    .cardinalRight:hover {
        border-left-color: #a0a0a0;
    }
    .cardinalDown {
        border-top-color: #c0c0c0;
    }
    .cardinalDown:hover {
        border-top-color: #a0a0a0;
    }
    .cardinalLeft {
        border-right-color: #c0c0c0;
    }
    .cardinalLeft:hover {
        border-right-color: #a0a0a0;
    }
    :root {
        --direction_background: #55b2dd;
        --direction_background_transparent: #55b2dd80;
        --direction_background_hover: hsl(199, 67%, 55%);
    }
    .property select option {
        background: #e0e0e0 !important;
    }
    .property.select.text select>option.unused {
        color: hsl(0, 0%, 0%);
    }
    .property.select.text select>option.not-implemented {
        color: hsl(60, 100%, 37.5%);
    }
}

#bN015htcoyT__google-cache-hdr{
  display:none;
  visibility:hidden;
}

@font-face {
  font-family: 'EvadesArial';
  font-weight: 700;
  font-style: normal;
  src: url("fonts/arial-bold.evades.woff2") format("woff2");
}
@font-face {
  font-family: 'EvadesTahoma';
  font-weight: 400;
  font-style: normal;
  src: url("fonts/tahoma-regular.evades.woff2") format("woff2");
}
@font-face {
  font-family: 'EvadesTahoma';
  font-weight: 700;
  font-style: normal;
  src: url("fonts/tahoma-bold.evades.woff2") format("woff2");
}
@font-face {
  font-family: 'fnt_barrio';
  font-weight: 400;
  font-style: normal;
  src: url("fonts/barrio.woff2") format("woff2");
}
@font-face {
  font-family: 'fnt_my_home';
  font-weight: 400;
  font-style: normal;
  src: url("external/fnt_my_home.woff2") format("woff2");
}
/*# sourceMappingURL=https://home.sonicexe66.repl.co/EXE/SONIC.EXE */